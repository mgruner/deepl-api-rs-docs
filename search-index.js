var searchIndex = JSON.parse('{\
"deepl":{"doc":"This binary crate provides a unix-style commandline…","i":[[5,"main","deepl","",null,[[]]],[5,"translate","","",null,[[["deepl",3],["translate",3]],["result",6]]],[5,"usage_information","","",null,[[["deepl",3]],["result",6]]],[5,"languages","","",null,[[["deepl",3]],["result",6]]],[0,"parse_arguments","","",null,null],[8,"Clap","deepl::parse_arguments","The primary one-stop-shop trait used to create an instance…",null,null],[11,"parse","","Parse from `std::env::args_os()`, exit on error",0,[[]]],[11,"try_parse","","Parse from `std::env::args_os()`, return Err on error.",0,[[],[["error",3],["result",4]]]],[11,"parse_from","","Parse from iterator, exit on error",0,[[]]],[11,"try_parse_from","","Parse from iterator, return Err on error.",0,[[],[["error",3],["result",4]]]],[24,"Clap","","Generates the `Clap` implementation.",null,null],[3,"Opts","","Command line client for the DeepL API.",null,null],[12,"subcmd","","",1,null],[3,"Translate","","A subcommand for controlling testing",null,null],[12,"source_language","","Source language (optional)",2,null],[12,"target_language","","Target language (required)",2,null],[12,"input_filepath","","Input filepath (optional, reads from STDIN by default)",2,null],[12,"output_filepath","","Output filepath (optional, prints to STDOUT by default)",2,null],[12,"preserve_formatting","","Preserve formatting",2,null],[12,"formality_more","","Increase formality",2,null],[12,"formality_less","","Decrease formality",2,null],[4,"SubCommand","","",null,null],[13,"Translate","","",3,null],[13,"UsageInformation","","Fetch imformation about account usage & limits.",3,null],[13,"Languages","","Fetch list of available source and target languages.",3,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"into_app","","",1,[[],["app",3]]],[11,"augment_clap","","",1,[[["app",3]],["app",3]]],[11,"into_app","","",3,[[],["app",3]]],[11,"augment_clap","","",3,[[["app",3]],["app",3]]],[11,"into_app","","",2,[[],["app",3]]],[11,"augment_clap","","",2,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",1,[[["argmatches",3]]]],[11,"from_arg_matches","","",3,[[["argmatches",3]]]],[11,"from_arg_matches","","",2,[[["argmatches",3]]]],[11,"augment_subcommands","","",3,[[["app",3]],["app",3]]],[11,"from_subcommand","","",3,[[["option",4]],["option",4]]]],"p":[[8,"Clap"],[3,"Opts"],[3,"Translate"],[4,"SubCommand"]]},\
"deepl_api":{"doc":"Provides a lightweight wrapper for the DeepL Pro REST API.","i":[[3,"DeepL","deepl_api","The main API entry point.",null,null],[3,"UsageInformation","","Information about API usage & limits for this account.",null,null],[12,"character_limit","","How many characters can be translated per billing period,…",0,null],[12,"character_count","","How many characters were already translated in the current…",0,null],[3,"LanguageInformation","","Information about a single language.",null,null],[12,"language","","Custom language identifier used by DeepL, e. g. \\\"EN-US\\\".…",1,null],[12,"name","","English name of the language, e. g. `English (America)`.",1,null],[3,"TranslationOptions","","Custom flags for the translation request.",null,null],[12,"split_sentences","","Sets whether the translation engine should first split the…",2,null],[12,"preserve_formatting","","Sets whether the translation engine should respect the…",2,null],[12,"formality","","Sets whether the translated text should lean towards…",2,null],[3,"TranslatableTextList","","Holds a list of strings to be translated.",null,null],[12,"source_language","","Source language, if known. Will be auto-detected by the…",3,null],[12,"target_language","","Target language (required).",3,null],[12,"texts","","List of texts that are supposed to be translated.",3,null],[3,"TranslatedText","","Holds one unit of translated text.",null,null],[12,"detected_source_language","","Source language. Holds the value provided, or otherwise…",4,null],[12,"text","","Translated text.",4,null],[3,"Error","","The Error type.",null,null],[12,"0","","The kind of the error.",5,null],[4,"SplitSentences","","",null,null],[13,"None","","Don\'t split sentences.",6,null],[13,"Punctuation","","Split on punctiation only.",6,null],[13,"PunctuationAndNewlines","","Split on punctuation and newlines.",6,null],[4,"Formality","","",null,null],[13,"Default","","Default formality.",7,null],[13,"More","","Translate less formally.",7,null],[13,"Less","","Translate more formally.",7,null],[4,"ErrorKind","","The kind of an error.",null,null],[13,"IO","","",8,null],[13,"Transport","","",8,null],[13,"AuthorizationError","","",8,null],[13,"ServerError","","",8,null],[13,"DeserializationError","","",8,null],[6,"LanguageList","","Information about available languages.",null,null],[6,"Result","","Convenient wrapper around `std::Result`.",null,null],[8,"ResultExt","","Additional methods for `Result`, for easy interaction with…",null,null],[10,"chain_err","","If the `Result` is an `Err` then `chain_err` evaluates the…",9,[[],[["result",4],["error",3]]]],[11,"new","","Use this to create a new DeepL API client instance. A…",10,[[["string",3]],["deepl",3]]],[11,"usage_information","","Retrieve information about API usage & limits. This can…",10,[[],[["result",6],["usageinformation",3]]]],[11,"source_languages","","Retrieve all currently available source languages.",10,[[],[["result",6],["languagelist",6]]]],[11,"target_languages","","Retrieve all currently available target languages.",10,[[],[["result",6],["languagelist",6]]]],[11,"translate","","Translate one or more text chunks at once. You can pass in…",10,[[["translatabletextlist",3],["translationoptions",3],["option",4]],[["result",6],["vec",3]]]],[11,"from_kind","","Constructs an error from a kind, and generates a backtrace.",5,[[["errorkind",4]],["error",3]]],[11,"with_chain","","Constructs a chained error from another error and a kind,…",5,[[],["error",3]]],[11,"with_boxed_chain","","Construct a chained error from another boxed error and a…",5,[[["error",8],["box",3]],["error",3]]],[11,"kind","","Returns the kind of the error.",5,[[],["errorkind",4]]],[11,"iter","","Iterates over the error chain.",5,[[],["iter",3]]],[11,"backtrace","","Returns the backtrace associated with this error.",5,[[],[["option",4],["backtrace",3]]]],[11,"chain_err","","Extends the error chain with a new entry.",5,[[],["error",3]]],[11,"description","","A short description of the error. This method is identical…",5,[[]]],[11,"description","","A string describing the error kind.",8,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",5,[[["error",3]]]],[11,"from","","",5,[[["error",3]]]],[11,"from","","",5,[[["errorkind",4]]]],[11,"from","","",8,[[["error",3]]]],[11,"eq","","",4,[[["translatedtext",3]]]],[11,"ne","","",4,[[["translatedtext",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"description","","",5,[[]]],[11,"source","","",5,[[],[["option",4],["error",8]]]],[11,"new","","",5,[[["errorkind",4],["state",3]],["error",3]]],[11,"from_kind","","",5,[[]]],[11,"with_chain","","",5,[[]]],[11,"kind","","",5,[[]]],[11,"iter","","",5,[[],["iter",3]]],[11,"chain_err","","",5,[[]]],[11,"backtrace","","",5,[[],[["option",4],["backtrace",3]]]],[11,"extract_backtrace","","",5,[[["error",8]],[["option",4],["internalbacktrace",3]]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]]],"p":[[3,"UsageInformation"],[3,"LanguageInformation"],[3,"TranslationOptions"],[3,"TranslatableTextList"],[3,"TranslatedText"],[3,"Error"],[4,"SplitSentences"],[4,"Formality"],[4,"ErrorKind"],[8,"ResultExt"],[3,"DeepL"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);